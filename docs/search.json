[{"path":"index.html","id":"about","chapter":"1 About","heading":"1 About","text":"技術ブログを始めました。\nとてもお世話になった「R」についてメインで書いていきます。2025.02.11 m-ari","code":""},{"path":"ggplot2でグラフを描く.html","id":"ggplot2でグラフを描く","chapter":"2 ggplot2でグラフを描く","heading":"2 ggplot2でグラフを描く","text":"","code":""},{"path":"ggplot2でグラフを描く.html","id":"使用するデータ","chapter":"2 ggplot2でグラフを描く","heading":"2.1 使用するデータ","text":"使用するデータは、Rのサンプルデータ「cars」。","code":"\nsummary(cars)##      speed           dist       \n##  Min.   : 4.0   Min.   :  2.00  \n##  1st Qu.:12.0   1st Qu.: 26.00  \n##  Median :15.0   Median : 36.00  \n##  Mean   :15.4   Mean   : 42.98  \n##  3rd Qu.:19.0   3rd Qu.: 56.00  \n##  Max.   :25.0   Max.   :120.00"},{"path":"ggplot2でグラフを描く.html","id":"package","chapter":"2 ggplot2でグラフを描く","heading":"2.2 Package","text":"Rでグラフを描くなら、「ggplot2」パッケージです。","code":"\nlibrary(ggplot2)"},{"path":"ggplot2でグラフを描く.html","id":"普通のグラフ","chapter":"2 ggplot2でグラフを描く","heading":"2.3 普通のグラフ","text":"RのDefaultでグラフを描くと下記のようになります。","code":"\nplot(cars)"},{"path":"ggplot2でグラフを描く.html","id":"ggplot2のグラフ","chapter":"2 ggplot2でグラフを描く","heading":"2.4 ggplot2のグラフ","text":"Rのggplot2でグラフを描くと下記のようになります。","code":"\n# colnames(cars)\nggplot(cars, aes(x=speed, y=dist)) +\n    geom_point(size=3)"},{"path":"ggplot2でグラフを描く.html","id":"少し装飾すると","chapter":"2 ggplot2でグラフを描く","heading":"2.5 少し装飾すると…","text":"","code":"\n# Windowsフォントを設定\nwindowsFonts(\"MEI\"=windowsFont(\"Meiryo\"))\n# colnames(cars)\nggplot(cars, aes(x=speed, y=dist)) + \n  geom_point(size=3, color=\"blue\") +\n  ggtitle(\"車のスピードと停止距離\") + \n  theme_minimal(base_size = 12, base_family = \"MEI\")"},{"path":"ggplot2でグラフを描く.html","id":"最後に","chapter":"2 ggplot2でグラフを描く","heading":"2.6 最後に","text":"グラフは楽しい！！","code":""},{"path":"plotlyでグラフを描く.html","id":"plotlyでグラフを描く","chapter":"3 plotlyでグラフを描く","heading":"3 plotlyでグラフを描く","text":"","code":""},{"path":"plotlyでグラフを描く.html","id":"使用するデータ-1","chapter":"3 plotlyでグラフを描く","heading":"3.1 使用するデータ","text":"使用するデータは、Rのサンプルデータ「airquality」にします。","code":"\nsummary(airquality)##      Ozone           Solar.R           Wind             Temp      \n##  Min.   :  1.00   Min.   :  7.0   Min.   : 1.700   Min.   :56.00  \n##  1st Qu.: 18.00   1st Qu.:115.8   1st Qu.: 7.400   1st Qu.:72.00  \n##  Median : 31.50   Median :205.0   Median : 9.700   Median :79.00  \n##  Mean   : 42.13   Mean   :185.9   Mean   : 9.958   Mean   :77.88  \n##  3rd Qu.: 63.25   3rd Qu.:258.8   3rd Qu.:11.500   3rd Qu.:85.00  \n##  Max.   :168.00   Max.   :334.0   Max.   :20.700   Max.   :97.00  \n##  NA's   :37       NA's   :7                                       \n##      Month            Day      \n##  Min.   :5.000   Min.   : 1.0  \n##  1st Qu.:6.000   1st Qu.: 8.0  \n##  Median :7.000   Median :16.0  \n##  Mean   :6.993   Mean   :15.8  \n##  3rd Qu.:8.000   3rd Qu.:23.0  \n##  Max.   :9.000   Max.   :31.0  \n## "},{"path":"plotlyでグラフを描く.html","id":"package-1","chapter":"3 plotlyでグラフを描く","heading":"3.2 Package","text":"触れるグラフを描くなら、「plotly」パッケージです。","code":"\nlibrary(plotly)"},{"path":"plotlyでグラフを描く.html","id":"plotlyのグラフ","chapter":"3 plotlyでグラフを描く","heading":"3.3 plotlyのグラフ","text":"plotlyでグラフを描くと下記のようになります。\nグラフがグリグリ動かせます♪","code":"\nplot_ly(airquality,\n        x=~Month, \n        y=~Temp, \n        z=~Ozone,\n        color=~Ozone, \n        mode= \"markers\",\n        size=8,    \n        type = \"scatter3d\") %>% \n  layout(title = \"airquality\")"},{"path":"plotlyでグラフを描く.html","id":"最後に-1","chapter":"3 plotlyでグラフを描く","heading":"3.4 最後に","text":"グラフって楽しい！！Plotlyすごい。","code":""},{"path":"leafletで地図を作成する.html","id":"leafletで地図を作成する","chapter":"4 leafletで地図を作成する","heading":"4 leafletで地図を作成する","text":"","code":""},{"path":"leafletで地図を作成する.html","id":"package-2","chapter":"4 leafletで地図を作成する","heading":"4.1 Package","text":"触れる地図を描くなら、Leafletですね。","code":"\nlibrary(leaflet)"},{"path":"leafletで地図を作成する.html","id":"地図に点","chapter":"4 leafletで地図を作成する","heading":"4.2 地図に点","text":"地図に点（マーカー）を配置します。","code":"\nleaflet() %>%\n  addTiles() %>%\n  addMarkers(lng=139.745461, lat=35.65856, popup=\"This is the Tokyo Tower.\")"},{"path":"leafletで地図を作成する.html","id":"最後に-2","chapter":"4 leafletで地図を作成する","heading":"4.3 最後に","text":"Leafletを紹介しましたが、GIS分析のところを詳しく書いていこうかな。","code":""},{"path":"osmdataでデータを抽出する.html","id":"osmdataでデータを抽出する","chapter":"5 osmdataでデータを抽出する","heading":"5 osmdataでデータを抽出する","text":"","code":""},{"path":"osmdataでデータを抽出する.html","id":"はじめに","chapter":"5 osmdataでデータを抽出する","heading":"5.1 はじめに","text":"osmdataは、open street mapのデータを抽出できるPackageです。\n簡易に分析するときなど、osmdataを使うのもありかなと…。","code":""},{"path":"osmdataでデータを抽出する.html","id":"package-3","chapter":"5 osmdataでデータを抽出する","heading":"5.2 Package","text":"osmdataです。GIS系のsfも使います。leafletはアウトプット用。","code":"\nlibrary(leaflet)\nlibrary(osmdata)\nlibrary(sf)"},{"path":"osmdataでデータを抽出する.html","id":"データを取得する範囲を決める","chapter":"5 osmdataでデータを抽出する","heading":"5.3 データを取得する範囲を決める","text":"まずは範囲を決めます。今回は、仙台市にします。\nこれは、仙台市がすっぽり入るBox範囲内を対象にしています。","code":"\nread_bb = getbb('sendai')\nprint(read_bb)##         min      max\n## x 140.46947 141.2603\n## y  38.05085  38.4547"},{"path":"osmdataでデータを抽出する.html","id":"レジャーをゲット","chapter":"5 osmdataでデータを抽出する","heading":"5.4 レジャーをゲット","text":"範囲内にあるレジャーなところを取得します。\nPC環境によりますが、データ取得には数分かかります。","code":"\nx = opq(bbox = read_bb) %>% \n  add_osm_feature(key = 'leisure') %>% \n  osmdata_sf()\n\n#polygonだけにする。\nx_sf = x$osm_polygon\nx_sf = subset(x_sf,!is.na(x_sf$name))\n\n#余計な列を除外。\nx_sf_disp = x_sf[,c(\"name\",\"geometry\")]\nprint(x_sf_disp)## Simple feature collection with 2357 features and 1 field\n## Geometry type: POLYGON\n## Dimension:     XY\n## Bounding box:  xmin: 140.5636 ymin: 38.05114 xmax: 141.2622 ymax: 38.45594\n## Geodetic CRS:  WGS 84\n## First 10 features:\n##                        name                       geometry\n## 38812192      榴岡3丁目公園 POLYGON ((140.8874 38.26092...\n## 60981058   田子二丁目北公園 POLYGON ((140.9592 38.28326...\n## 61578891      田子2丁目公園 POLYGON ((140.9612 38.28038...\n## 61885151     高砂二丁目緑地 POLYGON ((140.9682 38.27068...\n## 62123827         清水沼公園 POLYGON ((140.8977 38.26628...\n## 62214328 岩沼海浜緑地野球場 POLYGON ((140.9318 38.11777...\n## 68087809         宮千代公園 POLYGON ((140.9104 38.25429...\n## 72107597         福住町公園 POLYGON ((140.9526 38.2729,...\n## 72107601     扇町一丁目公園 POLYGON ((140.9417 38.27221...\n## 76739089     上田子２号公園 POLYGON ((140.963 38.28284,..."},{"path":"osmdataでデータを抽出する.html","id":"地図にプロット","chapter":"5 osmdataでデータを抽出する","heading":"5.5 地図にプロット","text":"レジャーなポリゴンを表示します。どこに行こうかな。","code":"\n#mapに表示する\nleaflet() %>% \n  addTiles() %>%\n  addPolygons(data= x_sf_disp, color = \"blue\", popup=~name)"},{"path":"osmdataでデータを抽出する.html","id":"最後に-3","chapter":"5 osmdataでデータを抽出する","heading":"5.6 最後に","text":"open street mapに感謝感謝。本当に助かります。","code":""},{"path":"wideなデータをlongにそして要約する.html","id":"wideなデータをlongにそして要約する","chapter":"6 wideなデータをLongに。そして要約する","heading":"6 wideなデータをLongに。そして要約する","text":"","code":""},{"path":"wideなデータをlongにそして要約する.html","id":"はじめに-1","chapter":"6 wideなデータをLongに。そして要約する","heading":"6.1 はじめに","text":"人間は、Wideなデータのほうが理解しやすい。\n一方で、機械や計算には、Longなデータが扱いやすい。\nということで、今回は、WideなデータをLongに変換します。\nなお、以前は「Reshape」を使っていましたが、今は「tidyverse」の方が便利かも。\n今回はこちらを使用します。","code":""},{"path":"wideなデータをlongにそして要約する.html","id":"package-4","chapter":"6 wideなデータをLongに。そして要約する","heading":"6.2 Package","text":"使用するのは、「dplyr」と「tidyverse」パッケージです。\nテーブル表示に「DT」も使います。","code":"\nlibrary(dplyr)\nlibrary(tidyverse)\nlibrary(DT) #for Table display"},{"path":"wideなデータをlongにそして要約する.html","id":"使用するデータ-2","chapter":"6 wideなデータをLongに。そして要約する","heading":"6.3 使用するデータ","text":"使用するデータは、Rのサンプルデータ「WorldPhones」にします。\n扱いやすいように加工します。","code":"\nread_df = WorldPhones %>%\n  as.data.frame() %>%\n  rownames_to_column(\"Year\")\n\n#Table disp\ndatatable(read_df)"},{"path":"wideなデータをlongにそして要約する.html","id":"wideからlongに変換","chapter":"6 wideなデータをLongに。そして要約する","heading":"6.4 WideからLongに変換","text":"pivot_longer()を使用してLongに変換します。","code":"\ndf_long = read_df %>% \n  pivot_longer(cols = -c(Year),names_to = \"area\", values_to = \"val\" )\n\n#Table disp\ndatatable(df_long)"},{"path":"wideなデータをlongにそして要約する.html","id":"要約する","chapter":"6 wideなデータをLongに。そして要約する","heading":"6.5 要約する","text":"Longなデータは要約も簡単です。\n下記は、area毎にvalを各種要約しています。","code":"\ns_data = df_long %>% \n  group_by(area) %>% \n  summarise(\n    numOfRecord = n(),\n    mean_val = mean(val),\n    max_val = max(val),\n    min_val = min(val),\n    p_005 = quantile(val, probs = 0.05),\n    p_095 = quantile(val, probs = 0.95)\n  )\n\n#Table disp\ndatatable(s_data)"},{"path":"wideなデータをlongにそして要約する.html","id":"最後に-4","chapter":"6 wideなデータをLongに。そして要約する","heading":"6.6 最後に","text":"データ分析って楽しい！","code":""},{"path":"シーケンス図を描く.html","id":"シーケンス図を描く","chapter":"7 シーケンス図を描く","heading":"7 シーケンス図を描く","text":"","code":""},{"path":"シーケンス図を描く.html","id":"はじめに-2","chapter":"7 シーケンス図を描く","heading":"7.1 はじめに","text":"20年位前、こういう図はEXCELで描いていました。\nまぁ、いまでも時々使いますが、こういうのも再現可能に作成できるのは本当にうれしいです。","code":""},{"path":"シーケンス図を描く.html","id":"package-5","chapter":"7 シーケンス図を描く","heading":"7.2 Package","text":"使用するのは、「DiagrammeR」パッケージです。","code":"\nlibrary(DiagrammeR)"},{"path":"シーケンス図を描く.html","id":"シーケンス図を書く","chapter":"7 シーケンス図を描く","heading":"7.3 シーケンス図を書く","text":"こんな感じに、シーケンス図が出来上がります。ALTにも対応している。","code":"\n# Create a sequence diagram\nDiagrammeR(\"\nsequenceDiagram;\n   customer->>ticket seller: ask for a ticket;\n   ticket seller->>database: seats;\n   alt tickets available\n     database->>ticket seller: ok;\n     ticket seller->>customer: confirm;\n     customer->>ticket seller: ok;\n     ticket seller->>database: book a seat;\n     ticket seller->>printer: print a ticket;\n   else sold out\n     database->>ticket seller: none left;\n     ticket seller->>customer: sorry;\n   end\n\")"},{"path":"シーケンス図を描く.html","id":"シーケンス図を書く2","chapter":"7 シーケンス図を描く","heading":"7.4 シーケンス図を書く2","text":"こんなのもできる。","code":"\nDiagrammeR(\"\nsequenceDiagram;\n    participant Alice\n    participant Bob\n    Alice->>John: Hello John, how are you?\n    loop HealthCheck\n        John->>John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts <br/>prevail!\n    John-->>Alice: Great!\n    John->>Bob: How about you?\n    Bob-->>John: Jolly good!\n\")"},{"path":"シーケンス図を描く.html","id":"よく書くやつ","chapter":"7 シーケンス図を描く","heading":"7.5 よく書くやつ","text":"私の世界では、こんな図をよく書いていた。","code":"\nDiagrammeR(\"\nsequenceDiagram;\n    participant UE\n    participant eNB\n    UE->>eNB: rrcConnectionRequest\n    Note right of eNB: Admission Check\n    alt Admission OK\n     eNB->>UE: rrcConnectionSetup\n     UE->>eNB: rrcConnectionSetupComplete\n    else Admission NG\n     eNB->>UE: rrcConnectionReject\n   end\n\n\")"},{"path":"シーケンス図を描く.html","id":"リンク","chapter":"7 シーケンス図を描く","heading":"7.6 リンク","text":"Mermaid公式リンク\n[link] https://mermaid.js.org/syntax/sequenceDiagram.html","code":""},{"path":"シーケンス図を描く.html","id":"最後に-5","chapter":"7 シーケンス図を描く","heading":"7.7 最後に","text":"シーケンス図、まだ活躍するはず！！（しないかな…。）\nあと、Alice、Bobとくると、次は、Charlieであってほしいのは、職業病か。","code":""},{"path":"ggpairsで重回帰分析.html","id":"ggpairsで重回帰分析","chapter":"8 ggpairsで重回帰分析","heading":"8 ggpairsで重回帰分析","text":"","code":""},{"path":"ggpairsで重回帰分析.html","id":"はじめに-3","chapter":"8 ggpairsで重回帰分析","heading":"8.1 はじめに","text":"データ分析するときって、まずはデータがどんな感じなのかを理解することから始めますよね。そんな時の分析の紹介です。","code":""},{"path":"ggpairsで重回帰分析.html","id":"使用するデータ-3","chapter":"8 ggpairsで重回帰分析","heading":"8.2 使用するデータ","text":"使用するデータは、Rのサンプルデータ「iris」にします。","code":"\nsummary(iris)##   Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n##  Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n##  1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n##  Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n##  Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n##  3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n##  Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n##        Species  \n##  setosa    :50  \n##  versicolor:50  \n##  virginica :50  \n##                 \n##                 \n## "},{"path":"ggpairsで重回帰分析.html","id":"package-6","chapter":"8 ggpairsで重回帰分析","heading":"8.3 Package","text":"おすすめは、「GGally」です。\nそして、触れるグラフを描くなら、「plotly」パッケージです。","code":"\nlibrary(plotly)\nlibrary(GGally)"},{"path":"ggpairsで重回帰分析.html","id":"分析","chapter":"8 ggpairsで重回帰分析","heading":"8.4 分析","text":"ggpairs()で、サクッと分析。すごすぎる。","code":"\nggpairs(iris)"},{"path":"ggpairsで重回帰分析.html","id":"分析2","chapter":"8 ggpairsで重回帰分析","heading":"8.5 分析2","text":"もう少し見やすく装飾してみます。","code":"\np = ggpairs(iris,\n            title = \"iris\",\n            mapping = aes(color = Species, alpha = 0.2),\n            upper = list(continuous = wrap(\"cor\", size = 2.5)),\n            lower = list(continuous = wrap(\"points\", size=1))\n) + theme(text=element_text(size=9))\n\nggplotly(p)"},{"path":"ggpairsで重回帰分析.html","id":"最後に-6","chapter":"8 ggpairsで重回帰分析","heading":"8.6 最後に","text":"データ分析って楽しい！","code":""}]
