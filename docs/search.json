[{"path":"index.html","id":"about","chapter":"1 About","heading":"1 About","text":"技術ブログを始めました。\nとてもお世話になった「R」についてメインで書いていきます。2025.02.11 m-ari","code":""},{"path":"ggplot2でグラフを描く.html","id":"ggplot2でグラフを描く","chapter":"2 ggplot2でグラフを描く","heading":"2 ggplot2でグラフを描く","text":"","code":""},{"path":"ggplot2でグラフを描く.html","id":"使用するデータ","chapter":"2 ggplot2でグラフを描く","heading":"2.1 使用するデータ","text":"使用するデータは、Rのサンプルデータ「cars」。","code":"\nsummary(cars)##      speed           dist       \n##  Min.   : 4.0   Min.   :  2.00  \n##  1st Qu.:12.0   1st Qu.: 26.00  \n##  Median :15.0   Median : 36.00  \n##  Mean   :15.4   Mean   : 42.98  \n##  3rd Qu.:19.0   3rd Qu.: 56.00  \n##  Max.   :25.0   Max.   :120.00"},{"path":"ggplot2でグラフを描く.html","id":"package","chapter":"2 ggplot2でグラフを描く","heading":"2.2 Package","text":"Rでグラフを描くなら、「ggplot2」パッケージです。","code":"\nlibrary(ggplot2)"},{"path":"ggplot2でグラフを描く.html","id":"普通のグラフ","chapter":"2 ggplot2でグラフを描く","heading":"2.3 普通のグラフ","text":"RのDefaultでグラフを描くと下記のようになります。","code":"\nplot(cars)"},{"path":"ggplot2でグラフを描く.html","id":"ggplot2のグラフ","chapter":"2 ggplot2でグラフを描く","heading":"2.4 ggplot2のグラフ","text":"Rのggplot2でグラフを描くと下記のようになります。","code":"\n# colnames(cars)\nggplot(cars, aes(x=speed, y=dist)) +\n    geom_point(size=3)"},{"path":"ggplot2でグラフを描く.html","id":"少し装飾すると","chapter":"2 ggplot2でグラフを描く","heading":"2.5 少し装飾すると…","text":"","code":"\n# Windowsフォントを設定\nwindowsFonts(\"MEI\"=windowsFont(\"Meiryo\"))\n# colnames(cars)\nggplot(cars, aes(x=speed, y=dist)) + \n  geom_point(size=3, color=\"blue\") +\n  ggtitle(\"車のスピードと停止距離\") + \n  theme_minimal(base_size = 12, base_family = \"MEI\")"},{"path":"ggplot2でグラフを描く.html","id":"最後に","chapter":"2 ggplot2でグラフを描く","heading":"2.6 最後に","text":"グラフは楽しい！！","code":""},{"path":"plotlyでグラフを描く.html","id":"plotlyでグラフを描く","chapter":"3 plotlyでグラフを描く","heading":"3 plotlyでグラフを描く","text":"","code":""},{"path":"plotlyでグラフを描く.html","id":"使用するデータ-1","chapter":"3 plotlyでグラフを描く","heading":"3.1 使用するデータ","text":"使用するデータは、Rのサンプルデータ「airquality」にします。","code":"\nsummary(airquality)##      Ozone           Solar.R           Wind             Temp      \n##  Min.   :  1.00   Min.   :  7.0   Min.   : 1.700   Min.   :56.00  \n##  1st Qu.: 18.00   1st Qu.:115.8   1st Qu.: 7.400   1st Qu.:72.00  \n##  Median : 31.50   Median :205.0   Median : 9.700   Median :79.00  \n##  Mean   : 42.13   Mean   :185.9   Mean   : 9.958   Mean   :77.88  \n##  3rd Qu.: 63.25   3rd Qu.:258.8   3rd Qu.:11.500   3rd Qu.:85.00  \n##  Max.   :168.00   Max.   :334.0   Max.   :20.700   Max.   :97.00  \n##  NA's   :37       NA's   :7                                       \n##      Month            Day      \n##  Min.   :5.000   Min.   : 1.0  \n##  1st Qu.:6.000   1st Qu.: 8.0  \n##  Median :7.000   Median :16.0  \n##  Mean   :6.993   Mean   :15.8  \n##  3rd Qu.:8.000   3rd Qu.:23.0  \n##  Max.   :9.000   Max.   :31.0  \n## "},{"path":"plotlyでグラフを描く.html","id":"package-1","chapter":"3 plotlyでグラフを描く","heading":"3.2 Package","text":"触れるグラフを描くなら、「plotly」パッケージです。","code":"\nlibrary(plotly)"},{"path":"plotlyでグラフを描く.html","id":"plotlyのグラフ","chapter":"3 plotlyでグラフを描く","heading":"3.3 plotlyのグラフ","text":"plotlyでグラフを描くと下記のようになります。\nグラフがグリグリ動かせます♪","code":"\nplot_ly(airquality,\n        x=~Month, \n        y=~Temp, \n        z=~Ozone,\n        color=~Ozone, \n        mode= \"markers\",\n        size=8,    \n        type = \"scatter3d\") %>% \n  layout(title = \"airquality\")"},{"path":"plotlyでグラフを描く.html","id":"最後に-1","chapter":"3 plotlyでグラフを描く","heading":"3.4 最後に","text":"グラフって楽しい！！Plotlyすごい。","code":""},{"path":"leafletで地図を作成する.html","id":"leafletで地図を作成する","chapter":"4 leafletで地図を作成する","heading":"4 leafletで地図を作成する","text":"","code":""},{"path":"leafletで地図を作成する.html","id":"package-2","chapter":"4 leafletで地図を作成する","heading":"4.1 Package","text":"触れる地図を描くなら、Leafletですね。","code":"\nlibrary(leaflet)"},{"path":"leafletで地図を作成する.html","id":"地図に点","chapter":"4 leafletで地図を作成する","heading":"4.2 地図に点","text":"地図に点（マーカー）を配置します。","code":"\nleaflet() %>%\n  addTiles() %>%\n  addMarkers(lng=139.745461, lat=35.65856, popup=\"This is the Tokyo Tower.\")"},{"path":"leafletで地図を作成する.html","id":"最後に-2","chapter":"4 leafletで地図を作成する","heading":"4.3 最後に","text":"Leafletを紹介しましたが、GIS分析のところを詳しく書いていこうかな。","code":""},{"path":"osmdataでデータを抽出する.html","id":"osmdataでデータを抽出する","chapter":"5 osmdataでデータを抽出する","heading":"5 osmdataでデータを抽出する","text":"","code":""},{"path":"osmdataでデータを抽出する.html","id":"はじめに","chapter":"5 osmdataでデータを抽出する","heading":"5.1 はじめに","text":"osmdataは、open street mapのデータを抽出できるPackageです。\n簡易に分析するときなど、osmdataを使うのもありかなと…。","code":""},{"path":"osmdataでデータを抽出する.html","id":"package-3","chapter":"5 osmdataでデータを抽出する","heading":"5.2 Package","text":"osmdataです。GIS系のsfも使います。leafletはアウトプット用。","code":"\nlibrary(leaflet)\nlibrary(osmdata)\nlibrary(sf)"},{"path":"osmdataでデータを抽出する.html","id":"データを取得する範囲を決める","chapter":"5 osmdataでデータを抽出する","heading":"5.3 データを取得する範囲を決める","text":"まずは範囲を決めます。今回は、仙台市にします。\nこれは、仙台市がすっぽり入るBox範囲内を対象にしています。","code":"\nread_bb = getbb('sendai')\nprint(read_bb)##         min      max\n## x 140.46947 141.2603\n## y  38.05085  38.4547"},{"path":"osmdataでデータを抽出する.html","id":"レジャーをゲット","chapter":"5 osmdataでデータを抽出する","heading":"5.4 レジャーをゲット","text":"範囲内にあるレジャーなところを取得します。\nPC環境によりますが、データ取得には数分かかります。","code":"\nx = opq(bbox = read_bb) %>% \n  add_osm_feature(key = 'leisure') %>% \n  osmdata_sf()\n\n#polygonだけにする。\nx_sf = x$osm_polygon\nx_sf = subset(x_sf,!is.na(x_sf$name))\n\n#余計な列を除外。\nx_sf_disp = x_sf[,c(\"name\",\"geometry\")]\nprint(x_sf_disp)## Simple feature collection with 2356 features and 1 field\n## Geometry type: POLYGON\n## Dimension:     XY\n## Bounding box:  xmin: 140.5636 ymin: 38.05114 xmax: 141.2622 ymax: 38.45594\n## Geodetic CRS:  WGS 84\n## First 10 features:\n##                        name                       geometry\n## 38812192      榴岡3丁目公園 POLYGON ((140.8874 38.26092...\n## 60981058   田子二丁目北公園 POLYGON ((140.9592 38.28326...\n## 61578891      田子2丁目公園 POLYGON ((140.9612 38.28038...\n## 61885151     高砂二丁目緑地 POLYGON ((140.9682 38.27068...\n## 62123827         清水沼公園 POLYGON ((140.8977 38.26628...\n## 62214328 岩沼海浜緑地野球場 POLYGON ((140.9318 38.11777...\n## 68087809         宮千代公園 POLYGON ((140.9104 38.25429...\n## 72107597         福住町公園 POLYGON ((140.9526 38.2729,...\n## 72107601     扇町一丁目公園 POLYGON ((140.9417 38.27221...\n## 76739089     上田子２号公園 POLYGON ((140.963 38.28284,..."},{"path":"osmdataでデータを抽出する.html","id":"地図にプロット","chapter":"5 osmdataでデータを抽出する","heading":"5.5 地図にプロット","text":"レジャーなポリゴンを表示します。どこに行こうかな。","code":"\n#mapに表示する\nleaflet() %>% \n  addTiles() %>%\n  addPolygons(data= x_sf_disp, color = \"blue\", popup=~name)"},{"path":"osmdataでデータを抽出する.html","id":"最後に-3","chapter":"5 osmdataでデータを抽出する","heading":"5.6 最後に","text":"open street mapに感謝感謝。本当に助かります。","code":""}]
